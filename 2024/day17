import re

registers, program = ["".join(elt.split()) for elt in open("example").read().split(
    '\n\n')]
registers = list(map(int, re.findall("(\d+)", registers)))
program = list(map(int, re.findall("(\d+)", program)))

pointer = 0


def combo(value):
    if value <= 3:
        return value
    elif value == 4:
        return registers[0]
    elif value == 5:
        return registers[1]
    elif value == 6:
        return registers[2]


def tick():
    global pointer
    global halt
    try:
        opcode, operand = program[pointer], program[pointer + 1]

        c = combo(operand)
        if opcode == 0:
            registers[0] = registers[0] // (2 ** c)
            pointer += 2
        elif opcode == 1:
            registers[1] = registers[1] ^ operand
            pointer += 2
        elif opcode == 2:
            registers[1] = c % 8
            pointer += 2
        elif opcode == 3:
            if registers[0] != 0:
                pointer = operand
            else:
                pointer += 2
        elif opcode == 4:
            registers[1] = registers[1] ^ registers[2]
            pointer += 2
        elif opcode == 5:
            result.append(c % 8)
            pointer += 2
        elif opcode == 6:
            registers[1] = registers[0] // (2 ** c)
            pointer += 2
        elif opcode == 7:
            registers[2] = registers[0] // (2 ** c)
            pointer += 2
    except IndexError:
        halt = True


result = list()
halt = False
while not halt:
    tick()
part1 = ",".join(map(str, result))
print(part1)
print(registers)

